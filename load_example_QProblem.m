load('linearsys.mat');
Ts = 0.01;
sysd = c2d(linsys1_C, Ts);
A = sysd.A;
B = sysd.B;
C = sysd.C;
n = 4;
Q = diag([0.8 0.1 0.1 0]);
N = 8;
R = 0.2;
x0 = [0;0;0;0];
Q_bar = blkdiag(Q, Q, Q, Q, Q, Q, Q, Q);
R_bar = R * eye(N);
S_bar = [B       zeros(4,1)      zeros(4,1)      zeros(4,1)     zeros(4,1)      zeros(4,1)      zeros(4,1)      zeros(4,1);...
         A*B     B               zeros(4,1)      zeros(4,1)     zeros(4,1)      zeros(4,1)      zeros(4,1)      zeros(4,1);...
         A^2*B   A*B             B               zeros(4,1)     zeros(4,1)      zeros(4,1)      zeros(4,1)      zeros(4,1);...
         A^3*B   A^2*B           A*B             B              zeros(4,1)      zeros(4,1)      zeros(4,1)      zeros(4,1);...
         A^4*B   A^3*B           A^2*B           A*B            B               zeros(4,1)      zeros(4,1)      zeros(4,1);...
         A^5*B   A^4*B           A^3*B           A^2*B          A*B             B               zeros(4,1)      zeros(4,1);...
         A^6*B   A^5*B           A^4*B           A^3*B          A^2*B           A*B             B               zeros(4,1);...
         A^7*B   A^6*B           A^5*B           A^4*B          A^3*B           A^2*B           A*B             B         ;
         ];
T_bar = [A;A^2;A^3;A^4; A^5;A^6;A^7;A^8];

H = 2*(R_bar + S_bar'*Q_bar*S_bar);
F_bar = (2*T_bar'*Q_bar*S_bar);
k_lqr = H\F_bar';
L = chol(H,'lower');
Linv = L\eye(size(H,1));
F = F_bar';

Ac = [1 0 0 0 0 0 0 0;...
      -1 0 0 0 0 0 0 0;...
      0 1 0 0 0 0 0 0;...
      0 -1 0 0 0 0 0 0;...
      0 0 1 0 0 0 0 0;...
      0 0 -1 0 0 0 0 0;...
      0 0 0 1 0 0 0 0;...
      0 0 0 -1 0 0 0 0;...
      0 0 0 0 1 0 0 0;...
      0 0 0 0 -1 0 0 0;...
      0 0 0 0 0 1 0 0;...
      0 0 0 0 0 -1 0 0;...
      0 0 0 0 0 0 1 0;...
      0 0 0 0 0 0 -1 0;...
      0 0 0 0 0 0 0 1;...
      0 0 0 0 0 0 0 -1;...
       ];
% Ac = [1 0 0 0;...
%       -1 0 0 0;...
%        0 1 0 0;...
%        0 -1 0 0;...
%        0 0 1 0;...
%        0 0 -1 0;...
%        0 0 0 1;...
%        0 0 0 -1];
b0 = 12*ones(2*N,1);
opt = mpcActiveSetOptions;
opt.IntegrityChecks = false;
opt.UseHessianAsInput = false;
[uMPC,status,iA1] = mpcActiveSetSolver(Linv,F_bar'*x0,Ac,b0,zeros(0,N),zeros(0,1),false(16,1),opt);

simulationTime = [0;0.01];

H = Linv;

A = Ac;
% 
% g.time = simulationTime;
% g.signals.values = F_bar';
% 
% lb.time = simulationTime;
% data1 = [ 0.5,-2.0 ];
% data2 = [ 0.0,-1.0 ];
% lb.signals.values = [data1; data2];
% lb.signals.dimensions = numel(data1);
% 
% ub.time = simulationTime;
% data1 = [ 5.0,2.0 ];
% data2 = [ 5.0,-0.5 ];
% ub.signals.values = [data1; data2];
% ub.signals.dimensions = numel(data1);
% 
% lbA.time = simulationTime;
% data1 = [ -1.0 ];
% data2 = [ -2.0 ];
% lbA.signals.values = [data1; data2];
% lbA.signals.dimensions = numel(data1);
% 
% ubA.time = simulationTime;
% data1 = [ 2.0 ];
% data2 = [ 1.0 ];
% ubA.signals.values = [data1; data2];
% ubA.signals.dimensions = numel(data1);